From: Russ Allbery <rra@debian.org>
Date: Sat, 30 Jan 2021 11:55:44 -0800
Subject: Avoid double free of ctx->princ in a failure case

When re-retrieving the authenticated principal from the current cache,
ensure the stored principal in the authentication context is always
either valid or NULL.  Otherwise, a failure of krb5_cc_get_principal
could result in a double free.  Thanks to Michael Muehle for the
report.

Fixes #20
---
 module/account.c | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/module/account.c b/module/account.c
index 211975a..c270c9b 100644
--- a/module/account.c
+++ b/module/account.c
@@ -5,7 +5,7 @@
  * user's authorization against .k5login (or whatever equivalent we've been
  * configured for).
  *
- * Copyright 2005-2009, 2014, 2020 Russ Allbery <eagle@eyrie.org>
+ * Copyright 2005-2009, 2014, 2020-2021 Russ Allbery <eagle@eyrie.org>
  * Copyright 2011
  *     The Board of Trustees of the Leland Stanford Junior University
  * Copyright 2005 Andres Salomon <dilinger@debian.org>
@@ -78,8 +78,10 @@ pamk5_account(struct pam_args *args)
      */
     if (ctx->cache != NULL) {
         putil_debug(args, "retrieving principal from cache");
-        if (ctx->princ != NULL)
+        if (ctx->princ != NULL) {
             krb5_free_principal(ctx->context, ctx->princ);
+            ctx->princ = NULL;
+        }
         retval = krb5_cc_get_principal(ctx->context, ctx->cache, &ctx->princ);
         if (retval != 0) {
             putil_err_krb5(args, retval, "cannot get principal from cache");
